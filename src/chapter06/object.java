package chapter06;
//클래스 외부 : 패키지, 임포트, 외부클래스
public class object {
	//클래스 내부
		//1. 필드(멤버변수) : 클래스 블락에 선언된 변수
		// 	cf) 지역변수: 메소드 내에서 선언한 변수
		//2. 메소드(멤버메소드) : 함수를 객체 지향 언어에서는 메소드라 칭함
		//	void main (){
		//	}
		//3. 생성자 : 객체 이름과 동일한 이름의 메소드
		//		  리턴타입이 있으면 안됨
		//		  객체 이름과 동일한 이름의 메소드
		//4. 내부 클래스 : 클래스 내부의 클래스 (Inner Class)
	public static void main(String[] args) {
		// 절차 지향 프로그램 : C
		//		장점 : 성능이 매우 우수하다, OS(Windows/Linux/Unix : c, c++)
		//		단점 : 프로그래밍 하기가 어렵다.
		//			  유지보수가 힘들다.
		//			  문제가 생겼을 때 전체 코드를 모두 수정해야 한다.
		// 객체 지향 프로그램: Java, C++
		//		장점 : 모든 것을 객체화해서 프로그래밍 함
		//			  코드가 간결해진다.
		//			  문제가 생겼을 때 유지 보수가 쉽다. (문제 객체만 수정 가능)
		//			  완성된 프로그램은 각 객체를 조합해서 완성
		//		단점 : 절차지향 대비 성능이 떨어질 수 있다.
		
		//클래스 (class) : 객체를 생성하기 위한 틀, 붕어빵 기계
		//객체 (object), 인스턴스(instance) : class를 기준으로 생성된 메모리에서 실행되는 프로그램
		
		//클래스 외부에 올 수 있는 3가지 :
		//	- 패키지 : 클래스를 조직화하는 폴더
		//	- import : 동일한 패키지에 존재하지 않는 클래스는 import
		//	- 외부 클래스
	}

}
